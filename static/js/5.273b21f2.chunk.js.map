{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","item","to","id","link","activeClassName","active","name","MessageItem","message","Textarea","Element","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","required","Dialogs","dialogsElements","dialogsData","map","messagesElements","messagesData","dialogs","list","messages","formData","dispatch","addMessageThunk","newTextMessage","reset","compose","connect","state","newMessageText","dialogsPage","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,SAAW,0BAA0B,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,2B,gKCW7MC,EARI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,KAAlB,SACI,cAAC,IAAD,CAASC,GAAK,YAAcJ,EAAMK,GAAIJ,UAAWC,IAAEI,KAAMC,gBAAiBL,IAAEM,OAA5E,SAAqFR,EAAMS,UCKxFC,EARK,SAACV,GACjB,OACI,qBAAKC,UAAWC,IAAES,QAAlB,SAA4BX,EAAMW,WCEpCC,EAAWC,YAAQ,YAErBC,EAAcC,YAAiB,IAqC7BC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EATL,SAACjB,GACjB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,YAAY,kBAAkBC,UAAWX,EAAUY,SAAU,CAACC,IAASX,GAAcL,KAAK,mBACjG,uDAOGiB,EArCC,SAAC1B,GAEb,IAAI2B,EAAkB3B,EAAM4B,YAAYC,KAAI,SAAC1B,GAAD,OAAU,cAAC,EAAD,CAA2BM,KAAMN,EAAKM,KAAMJ,GAAIF,EAAKE,IAAnCF,EAAKE,OACzEyB,EAAmB9B,EAAM+B,aAAaF,KAAI,SAAC1B,GAAD,OAAU,cAAC,EAAD,CAA2BQ,QAASR,EAAKQ,SAAvBR,EAAKE,OAO/E,OACI,sBAAKJ,UAAWC,IAAE8B,QAAlB,UACI,qBAAK/B,UAAWC,IAAE+B,KAAlB,SACKN,IAGL,sBAAK1B,UAAWC,IAAEgC,SAAlB,UACKJ,EACD,cAACd,EAAD,CAAkBG,SAbR,SAACgB,EAAUC,GAC7BpC,EAAMqC,gBAAgBF,EAASG,gBAC/BF,EAASG,YAAM,0BCHRC,sBACXC,aATkB,SAACC,GACnB,MAAO,CACHC,eAAgBD,EAAME,YAAYD,eAClCf,YAAac,EAAME,YAAYhB,YAC/BG,aAAcW,EAAME,YAAYb,gBAKX,CAAEM,sBAC3BQ,IAFWL,CAGbd","file":"static/js/5.273b21f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rr5S\",\"list\":\"Dialogs_list__bWY8Z\",\"messages\":\"Dialogs_messages__26XM3\",\"item\":\"Dialogs_item__tMzpj\",\"link\":\"Dialogs_link__3GuNZ\",\"active\":\"Dialogs_active__5kfan\",\"message\":\"Dialogs_message__gbzpi\"};","import { NavLink } from \"react-router-dom\"\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <NavLink to= {\"/dialogs/\" + props.id} className={s.link} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from \"./../Dialogs.module.css\"\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MessageItem","import React from \"react\"\r\nimport { Field, reduxForm, reset } from \"redux-form\"\r\nimport { maxLengthCreator, required } from \"../../validators/validators\"\r\nimport { Element } from \"../common/FormControls/FormControls\"\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport s from \"./Dialogs.module.css\"\r\nimport MessageItem from \"./MessageItem/MessageItem\"\r\n\r\nconst Textarea = Element(\"textarea\")\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map((item) => <DialogItem  key={item.id} name={item.name} id={item.id} />)\r\n    let messagesElements = props.messagesData.map((item) => <MessageItem key={item.id} message={item.message} />)\r\n\r\n    const addNewMessage = (formData, dispatch) => {\r\n        props.addMessageThunk(formData.newTextMessage)\r\n        dispatch(reset(\"dialogsForm\"))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.list}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <DialogsReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder=\"Write a message\" component={Textarea} validate={[required,maxLength50]} name=\"newTextMessage\"></Field>\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'dialogsForm'}) (DialogsForm)\r\n\r\nexport default Dialogs\r\n\r\n","import { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\nimport { addMessageThunk } from \"../../redux/dialogs-reducer\"\r\nimport Dialogs from \"./Dialogs\"\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessageThunk }),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}